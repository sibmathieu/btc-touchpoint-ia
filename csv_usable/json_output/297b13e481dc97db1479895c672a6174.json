{
  "id": "297b13e481dc97db1479895c672a6174",
  "text": "[Applause]hello everyoneare you bullish on bitcoinokay good gotta get somesome uh some enthusiasm here becauseit's the last I'm the only thingstanding between you and partying out onthe on the roof so I will try to to gofastum and I will I will this is all inEnglish but I will I'm gonna say somestuff in French as well so let's seeokay so I'm supposed to talk about likemost of the stuff I've worked on in thelast decade or so so I'll go quickly aspossibleumand yeah so I'm Ted strija I've beenworking on bitcoin almost 10 years uhquick summary of some things I've workedon Lightning Network discrete logcontracts utrexo some other thingsum why talk about this so you know a lotof this is you know the the conferenceis like hey talk about all the thingsyou worked onum and I'm going to speak a little bitin French right now to sort of talk tothe French people so uhforeignokay so I hopefully the only EnglishParts was like shout outs to people Iwas just saying I hang out I'm mostlytalking to the people I hang out withall anyway so like hopefully I can talkto some French people after this that'dbe funum so yeah cool so I'm going to talkabout stuff that maybe it's well knownuh but you know there's always newpeople coming into this and and learningum and that's somethingthat's I think about sometimes and I wassaying like I I oh I worked at MIT untilthis weekum and I've worked with students andsometimes I think like it's kind ofunfair like when I learned about BitcoinI could mine a couple Bitcoins on mycomputer with my GPU uh and then I talkto students you know they're like 18 andthey're you know learning about it theycan't mine a couple Bitcoins so it'skind of like you know unfair but thenalso I met a really rich guy a fewmonths ago and he learned about Bitcointhe same time I did around 2011. he wasjust older you know he was like 10 or 15years older and he had a lot of moneysaved up when he learned about it whenhe was like 35 I learned about it whenI'm like 25 you know soyeah that's just like life and like youknow I bought a house recently I'm likewho owned this land you know it's justpeople who came from Europe like 200years ago or something so anywayit's it's like you know there's alwaysnew people coming in we want to bewelcoming as we canokayum yeah and and also you know it'sthere's a big gap I think lots of timespeople are like laser eyes and changethe world and we'll be rich and uh whenthe when you're actually working onbitcoin and maybe you've seen if you'veseen the other talks today uh you justdeal with the problems it's just like ohthis is a problem this is a problem youknow you sometimes lose perspective sosome of the reason I like coming toconferences as well is actually it'skind of invigorating it's like heypeople are really into this uh becausewhen you're just working at home or justworking in an office you only deal withthe problem so it's cool to see thatpeople uh actually like this okay so uhproblems here are some of the bigproblems in Bitcoin and they're they'restill there but you know we've beenworking on it for a long time soscalability is a huge one uh it'sexpensive to run you're paying billionsof dollars in electricity and Asics uhprogrammability is something that likeyeah Bitcoin you know people want it tobe more flexible and do more things uhprivacy big problem that is really hardto deal with like I'm kind of scared towork on privacy that apparently someonegot arrested for working on privacytechnology like and that's not even likecrazy like even like I can say like theDLC stuff I'll talk about in a minuteum there were people saying hey youshould talk to lawyers before you workon the software and and some of thestudents I was working with were like Idon't want to work on this like someonesaid it could be illegal and you know Ithink it's like so far away from some ofthe stuff that is like so scammy andpeople make so much money and do allthese scams and it's like wait I'm stillworried about like these things but itit does affect things and I know likeother people I know have gotten sued andstuff and it definitely hurts soyeah privacy is one thing where it'slike you want to work on it but it'ssketchyum and just your general usability uh II see lots of people using Bitcoin butin ways that's like no you should run afull node just just download Bitcoincore and they don't like you know mybrother or something so yeahum so anyway those are a bunch of theproblems there are some partialsolutions that help and I'll talk aboutthree of them these are the three thingsuh some of the three things I've workedon recently or not recently really uhlightning Network discrete log contractsand u3xo so this will be sort of Mile aminute and I guess the idea is hopefullymake people think about it and then canask questions and go drink whateverchampagne they give you and stuff afterthisum okay so lightning network uh that'spretty well known I think it's cool thatthe name I choose for it like stock souh Joseph wanted to call it a differentname I was like let's call it lightningNetwork oh hey it's stuck coolum and it's pretty well known at thispointso I don't think I have to explaineverything about it but in 2015 orreally 2014 when we started working onitum the general idea of payment channelswas around and even sort of the idea oftrying to make a network of paymentchannels um it wasn't like you knowtotally novel or out of the blue oranything and there's probably people Idon't know if Christians around but likeyeah people were doing similar workum and at the time people thought thatlike payment channels were a thing thatworked and they really weren'tum there were problems with malleabilityproblems with like being able to keepreusing payment channelsum and so you know part of starting thiswas Joseph had ideas about how to do itI had some ideas and we you know startedworking on it how to make it reallytrustless through intermediariesum and at the time one of the ideas wasokay you have these sort of one-waychannels whereyou have similar to lightning you have afunding transaction output and let's sayit has you know 10 coins and Alice cankeep paying Bobum and this works because Alice keepsgiving Bob something that's better forBob so Bob can and is worse for Aliceand really in this case Bob's the onlyone who can close the channel right soAlice is giving Bob a way to close thechannel and maybe there's like a timeoutwhere they can you know both get theirmoney back eventuallyum and Bob doesn't you know can close itbut doesn't and leaves it open and Alicekeeps giving Bob more money right thisseems to make sense and works becauseBob sort of continue uh continuallygetting something that's better for himthat he doesn't necessarily want to endand I always think about the blockchainin this context as the blockchain iswhere you put data that you don't how doI say this the blockchain is where youput data that someone doesn't wanteveryone else to knowright so I think about it in in you knowif I'm making a payment and I just let'ssay I just give you a private keyum you won't consider that really megiving you the payment I have a utxoit's got one Bitcoin it's like herehere's the private key for itit's not quite good enough right youwant everyone to know that I can't useit anymore and just giving a private keyis not enough so you put it on theblockchain everyone knows it and I wouldrather that data on the blockchainwasn't there it'd be great if I couldgive you coins but I get to keep them uhand no one knows that I gave them to youso I could maybe use them the next dayuh but the whole point of the blockchainis we're putting it out there soeveryone knows you don't have it anymorethere's data that's not beneficial toyouum and so in this case Alice can keepgiving ituh and then Bob you know broadcast It'sThe Endum so yeah it's data you don't wantpeople to see necessarily uh you canalways share uh more keys and somethinglike graft root is a really interestinguh technique where you could say okayI'm going to send to a key but it's notthat this key will spend this key canthen later sign a new message on who canspend it so I can keep adding differentspending paths uh and and this was sortof like that and what I think one of thebig ideas in lightning Network that'snot something that people think about asmuch is revoking a claim that you knowI'm I'm revoking something without goingon to the blockchainumand so that's to me like and this ispart of the stuff I worked on with withuh you know lightning Network spendingwhere it's like okay you havethis the actual script is fairlystraightforward it's you know key a nowor key B later and since it's an or keya also later worksum but the idea is there's one key thatcan spend right away and one key thatcan spend laterumand the the key that can spend now isactually given away right it's acomposite key you sort of like add theseelliptic curve points together and sothe idea is someone gives it up and bygiving it up revokes their claim on atransactionright so and that's that's how uhchannels and lightning Network work whenyou're just moving money you know noteven thinking about routing just asingle Channel Alice says okay I haveone coin Bob has nine you can buildcooperatively a new state where nowAlice has five Bob has five and thenimmediately after building this uh yourevoke your claim on the previous dateby giving up private Keysum and so I think that was like kind ofa really cool idea that you know and youcan you keep doing this for basicallyeverum you know make a new one revoke itduring the protocol there's a littletime window where you have this sort ofsuperposition and there's two states andeither is valid but usually that onlytakes you know a few milliseconds uh andthen you keep going this way and sothat's just one of the things I wantedto talk about lightning Networkum because it leads into the next thingI have like one slide about routinghtlcs because I think there's been a lotof talk about it so I don't need to gothrough it but like yeah that's how itworks you you wrote it you'll seehopefully sometimes that works but yesthat is one of the problems in lightningNetwork sometimes it doesn't workum butso I'll segue to the next part which isdiscrete log contracts which uses avariant of that same idea of likerevoking and you know which states arevalid and not uh and so this wassomething I wrote I was actuallydeveloping at the same time as LightningNetwork and thinking maybe this could beused as well for some kind of smartcontract stuff it actually startedbecause I went to an ethereum Meetup andno it was a Bitcoin Meetup in SanFrancisco and I met a guy and he's likeoh I'm working on ethereum like what'sethereum uh this was you know 2014before any Ico or anything uh and he'slike oh it's like Bitcoin but you can dosmart contracts I'm like well what areyou doing with it and he was talkingabout how you could do these kind of uhyou know Futures contracts based onOracle price feeds and I was like I betyou could do that in Bitcoin and he'slike well how I'm like I don't know allof it this it seems like the kind ofthing you could do in Bitcoin rightum and so you know it took three or fouryears but then I wrote thisumso it's actually a very similarstructure to lightning Network in termsof the you know the transaction scriptsuh everything like thatum you have one funding output and manyspending transactions but the differenceis in lightning Network everything'sinternal to the channel itself rightuntil the lightning Network itself it'ssort of Alice and Bob are sending eachother data and you know they keepspending you know giving each othermoney or revoking thingsum however in discrete log contractsinstead of sequentially invalidatingpast transactions all the transactionsare are invalid except there's one thatgets endorsed by an oracleuh and the Oracle endorsing it doesn'trealize it's endorsing it right so agood example of this isum Alice and Bob want to bet on theweather and so you know tomorrow'sweather it's a future event that theydon't know what's going to happenum if it rains Alice gets a Bitcoin ifit's sunny Bob gets a Bitcoin if it'slike cloudy then they both just gettheir half a Bitcoin backum and this is not something that youcan put into a consensus protocol rightlike it's sort of an opinion you needthis third-party real world data to comein and and so this this idea also hasbeen around and people were working onsort of Oracle thingsto me one of the problems with theOracle is and I think you know peoplewere talking about this just the lasttalk like hey that Oracle might end upbeing a regulated entity or something oryou know if that's if you've moved allthe trust to this Oracle that does seemlike you're reducing the amount of trustneeded but now you've still got thisOracle rightum and so I think to further make thisless trust is okay let's make it so theOracle doesn't even know they areaffecting any smart contracts right makeit sort of this this diode where theOracle is a one-way you know transmitterthere are radio station broadcasting thedataum but no one's querying them no one'sasking them to to judge anythingumoh no that that's right uh Oracle yeahand then also you want the Oracle to notequivocate you don't want the Oracle toumbe able to say to one person it's sunnyand to another person it's rainy rightuh you want them to be held accountableand so it uses the same idea rightyou've got uh possibly you know anenlightening you're saying okay we'relike sequentially adding and revokingStates so it's like okay here's uh Stateone I build state two and then I tear upState one by giving you this new dataand then I build state three and I tearup state two so now where we can have asingle state for this uh contractum with discrete law contracts same ideaexcept you build all three states whenyou're building the contract so youactually like build all these differentstates exchange them send them over tothe counterparty they check thesignatures and stuff and they're likeokay and then you broadcast the fundingtransaction and then you wait and theOracle actually makes signs a messageyou can use that Oracle signature andsort of stuff it into your owntransaction and now one of these isvalid and you can't really broughtpodcast the other ones you can broadcastthem but it's exactly the same asenlightening broadcasting a invalidstate where the other person can justgrab all the money so what's nice aboutthis is it looks kind of the same asLightning network channels you can'teven tell on chain that this washappening because it looks the same asLightning although now there's there'slike so many new developments about itumyeah so it's it's not as widely known Iguess like people are saying yeah ittakes longerum but there's lots of developmentthere's some startups and stuff workingon it open source work so that's coolum there's a lot actually in the lastsix months year yeah a lot ofinteresting developments about it aboutusing uh adapter signatures ideas abouthow you could fit up check checktemplate verify into this and make itmore scalableum a paper like a week or two ago aboutBLS signatures using BLS signatures forthis which is really coolum one of the things I worked onrecently like last year with a studentis Novation so one of the problems withdiscrete law contracts isyou don't want to get stuck in thecontract a lot of times people want tolike trade things really quick so you'relike okay I'm long you know I I'm longBitcoin so I have like leveraged Bitcoinand my counterparty has something like astable dollar value outputum but actually I want out and and thatterminates uh next week but actually Iwant to trade this I want to get out Iwant to take some profit or stop my lossum if you cooperate with yourcounterparty and your counterparty'slike yeah okay like we can end earlythat's fineum then great but maybe yourcounterparty's offline uh so a way tonon-interactively trade your position tosomeone else would be really cool wehave a paper that you can do it uh youcan only do it once though and and thenyou'd need to be interactive again torefresh it because we need somethinglike uh say cash any preview to be ableto continually Do Itum so there's a lot of cool stuff goingon with thatokay I have like 12 13 minutes and sonext I will talk about somethingcompletely different uh I I still thinkit's a you know so so discrete lawcontracts is more of a flexibilityprogrammability kind of thing that cando some smart contractsum maybe it hasn't gotten as muchair time because if you're trying to dosmart contracts there are other you knownot as cool as Bitcoin platforms andcoins that people sort of gravitatetowards and can do whatever crazy stuffthey wantum obviously developing in Bitcoin is abit harder because it's you know a bitmore constrained uh for good reasonum and nutrixo is sort of a scalingthing that's kind of layer one maybelayer 1.5 it's not really Layer Twobecause it doesn'tchange too much the the general model ofBitcoin right it's it's really you canthink of it as a replacement for thedatabase in Bitcoinumso I've been working on this mostlythrough the pandemic so maybe that'salso why it doesn't have hasn't gottenquite as many umnot as much quite as much mind sharebecause I haven't really given manytalks about it I've been working on itfor quite a while but but yeah for likeall of 2020 2021 like you're just stuckat home right soumso yeah the idea isyou don't store the whole utxo set youstore an accumulatorum and the idea is that like long-termwallets store their own proofs of theirown coins and if you have more utxoswell that's a heavier load for your nodeto deal with but that's that's goodright like so if you don't if you're notaware like utxos are where the Bitcoinslive right I I think maybe in the futureif Bitcoin takes over the world we won'tutxos will be a slang term for moneyit's like hey did you get you know doyou send them the utxo it's like this iswhere all the Bitcoins live the goal ofBitcoin is to get lots of utxos thathave a high score attached to themum and so they're they're pretty smalllike in the actual database they're youknow variable size but like yeah 70bytes you got a 36 byte out point yougot maybe 20 to 32 byte uh you knowscript Pub key kind of thing and thenlike eight bytes for how much they'reeach worth and four bytes for height Iguess and I think that's itum so yeah they're tiny but there's like90 not quite 90 80 something million ofthem now and it does go up but um itcould go up a lot faster is one of theworries and one of the things thatprompted u3xo is right now the utxo setis five gigs not quiteum and the blockchain is like you knowalmost 100 times that big and so peopleworry about the blockchain size and thatwas one of the huge debates like fivefive years ago now wow more than fiveyears ago now the block size debate andstuff and they're like hey we can't justyou know make the block size arbitrarilylarge people won't be able to store itpeople won't be able to verify itum but no one really talked about utxoset size muchum and so right now yeah you're about100 times larger for the the history youknow the history is the blockchain iseverything that's happened in Bitcoinand the utxo set in chain State folderin Bitcoin uh core is there is all thestuff that exists now so who owns whattodayand you can prune you can throw away the448 gigabytes of blockchain if you wantyou know if you're running a full nodeyou just set pruning and it throws itaway and everything pretty works worksfineum but you cannot throw away this fivegig chain State and actually the fivegig chain state ismore of a bottleneck than the blockchainbecause you always have to hold it andit's like it's level DB and it's allthese really tiny things so it's a lotof very intense uh disk i o so if you'rerunning on like a spinning hard driveit's like really slowumand we've seen like sort of utxo setpollution where like in late 2017 theutxo set got really large and we thinkit's like these these exchanges who aresort of managing their wallets poorlyand making a really large number ofutxosum and then like cleaning it up laterand stuff and and one of the worries isthe utxo set could get really bigum you could grow it by like a gigabytea month pretty easily if I mean maybe Ishouldn't say this but like you could noone's doing it so that's good but likeyou could definitely Crank that if youyou know a malicious actor wanted to youknow waste a lot of money to do so butlike hey I'm gonna double the utxo setsize they could do itum there's a lot of pollution like opreturn is a way to not put stuff in theutxo set so one of the things you knowthere's an is unspendable check in inBitcoin and if you see an opera turn asthe first byte of the script you say I'mnot even going to put it in the utxo setit can never be spent so I'm never I'mnot even going to bother putting in thedatabaseum so that's like actually you know goodbut there's lots of stuff that obviouslywill never be spent but it's still inthe utxo set something like oh wellum but yeah so the the general idea ishey instead of my node and your node andeveryone's node holding this fivegigabytes why don't you keep your ownutxosright so if you have a wallet with 10utxos it's not that much right that'sjust you know a kilobyte or two and yousort of split it up amongst all thedifferent users and if you're you knowcoinbase and you've got like a millionutx I was like well okay that's theirproblem like they can hold all of thoseand they're not on my computerright yeah so and then the idea behindit was okay right now when people spendtheir money they attach a signature toproving that it's theirs right andthat's how you you know check thesignatures and stuff this adds a newwitness that's an inclusion proof aproof that the coin exists and so in theutxo in the u3xo model you'd still bevalidating every transaction and stillbe throwing stuff into something thatlooks like a database right you'rewriting to it and deleting from it butyou don't actually store the whole thingyou're you're writing to it and thenlater receiving a proof that hey youwrote this into your accumulator acouple days ago and then forgot itum and you can see how this would workkind of like a Merkle tree rightbasically if you put the utxo set into agiant Merkle tree and then people gaveMerkel proof that hey my my coins are inthere and then you say okay your coinsare in there I'll let you spend itum it's a little different I'll go realquick uh standard Merkel trees don'tsupport addition and deletion uh soutrexo is a modified kind of MerkelForest kind of looking thingum so real quick if you want to learnabout this I actually you know I didbring papers and I at the MiamiConference I was definitely like drawingdiagrams and like moving arrows andstuff for it umforeignyeah so adding is actually kind ofstraightforward soyou keep the root of every tree everytree is perfect which means it's alwaysa power of two there's no asymmetries sothe idea is if you have four utxos youknow four elements in this set you keepthis one root it's in yellow orange uhif you're adding something so you'relike okay I added a new utxo uh nowthere's five instead of four okay wellyou just keep that separate right nowyou keep two different things and yousay okay now I add six well once youhave six you can smoosh those twotogetheruh and now I say okay I have seven Ineed to keep all three of those and nowI've added to eight once you have eightyou can smoosh those together to onesmoosh those together smush thosetogether and now you only need to keepone thingum and you know you keep the treesperfect that way it's also kind of nicethe number of trees is going to be thenumber of one bits in the binaryrepresentation in the number of leavesand it if you think about it you're likeokay yeah eight is one zero zero zeroand you know seven is one one one andyou know five is one oh one and four isone oh oh so yeah like you can just lookat the number in binary you're like oheach tree you know in that space willhave how many things is under it stuffso addition actually is like it's like10 lines of code it's actually prettystraightforward it's kind of niceum deletion is harder what what is niceabout and and the actual thing is we'retrans we're moving the deletionalgorithm to actual simpler oneum I'm giving a very hand-wavyexplanation of deletion here there'sactually in this algorithm a lot of likekind of edge cases that are annoying andwe're switching to a new algorithm thatis a bit simpler and doesn't have asmany edge casesum but what's what's important andwhat's Works in both algorithms is theproof of inclusion the proof somethingexists within the tree is always enoughto allow you to delete it which is kindof nice and in Bitcoin those two thingsare kind of the same operation the onlytime you need to prove that a utxoexists is when you're deleting it rightso it which is very different fromsomething like ethereum or somethinglike that where you're always sayinglike hey here's this smart contract andI'm like changing it or modifying it orjust referencing it read only in Bitcointhe only time you touch a utxo is thiskind of re-delete operation right whereyou're like hey I'm spending this utxo Ineed to read it get the data check thesignature and then right after I do thatI delete itumand so that's kind of nice because thenew trick so it fits really well so whenwe want to prove for exampleum element two here the proof would be 38 right so numerical proof like you hashtwo and three together to get nine youhash nine and eight together and you get12.um so when someone's saying hey I'mgonna spend two I'm deleting two uh theygive you three and eight and once youhave three and eight you can reconstructa new set of trees without two right yousay okay well if two is goneuh I know what three and eight arethat's going to be my new set of trees Ijust delete nine and twelve and I'm likeyeah now I have a tree with two and alittle sort of tree with with only oneand now I have three leaves uh and youknow I went from four to three cool I'mall set that's a like really easyexample there are some harder examplesbut it always works basically you'reeither wait did I no I didn'tum either you have the sort of siblingin your proof or you have something likeon its own in a row and you can move itinto place so you're able to deleteum and it's it's actually pretty quickit's kind of nice it's it's Quantumsecure right because it's just hashfunction so it's kind of a coolalgorithm I thinkum the problem with utrexo that and thisthis also was not my idea actually Ithink talking to sipa uh Peter wool atuh Financial crypto like we're talkingon the beach and he's like no theproblem with these ideas is you have tohave this bridge node and I'm like wellwhy is that a problem because a lot ofthe other accumulator designs you wouldneed proofs for every utxo and that wasvery hard to generate but also to updateand they have to change every time ablock comes inbecause although the idea would be maybehey everyone keep track of your ownutxos and your wallet and sort of sendthem out it's not really going to workright because if you're the first personthat uses this you're going to say heyI'm using this new cool technology and Idownloaded it and like I've got proofsfor all my coins and uh everyone give meproofs when you give me yourtransactions they're all just going tobe running version you know 24 or 25 orwhatever they're not going to be usingthis and you're going to be stuck youwon't be a given proofs so you need abridge node at least temporarily and Ithink in practice probably foreverum you're never going to get everyone toswitch to this which is also nice a partabout this is it's not a fork there's nosoft work there's no consensus changeyou can start running it today if youwant I mean there's a lot of bugs but itwill work without any minor knowledge oranything people don't have to knowyou're doing it which is cool but yeahyou need some kind of bridge node whichcan provide proofs on demand for everyutxo so here's sort of the model wherelike you've got full nodes over on thatside that are just doing the same thingthey do today you got a bridge node inthe middle and the bridge node appearsto be a full node to the full nodes andalso appears to be this sort of miniutrix o node to the other ones so youdon't necessarily like know that you'retalking to bridge node and like you knowpeer-to-peer propagates on both sidesbut when it sees like a block or when itsees a mempool transaction it looks upand says oh it's spending these you knowfour or five utxos I generate a proofthrough I've got that whole Merkle treewhich is you know 90 million leaves andit's kind of huge it's five to ten gigsbut I can generate proofs on demand andthrow them over to the other side andthen these guys will consume the proofsso the bridge node is something thatlike you know it's extra work to do butit's not that bad it's like five tengigs of storage and minimal CPU and youcan totally run it like if you can run aBitcoin full node you can run a bridgenode basicallyumand that was a big difference betweenutrixo and other ideas of how to do thiswhere uh like some rsa-basedaccumulators or class group basedaccumulators have nice properties wherethe proofs are very small uh and you canverify things much more quickly andstuff but maintaining a bridge node issort of prohibitive it would need 90million proofs and every time a blockcomes in you have to update all 90million of those proofs individually uhand that was like a real scalabilityproblem so that was sort of the impetusbehind some of the amount okay realquick some interesting uh things you cando some some optimizations in New Trickssoum there's a lot of locality a lot andand this works in level DB as well whereyou're like hey utxos that just gotcreated are probably going to get spentin the next block or two and that youknow so this is a log log plot of howlong utxos liveum and so you can sort of see a niceline a lot of utxos live very shortlifespans a lot of them live zero blocksthey are created in this destroyed inthe same block which is you know kind ofinefficient but is great for this systembecause in utrexo those utxos don'texist they never touch the accumulatorbecause utxo only updates things whenblocks come in they don't it doesn'treally deal with the mempool too much uhfun little things about this you can seethere's a bump at six because peoplewait for six blocks I don't know there'salso a bump at 100 which makes the onlyone that really makes sense because likeif you're a miner You Gotta Wait 100blocks to spend your money then there'salso one at 433 and a thousand so peoplewait those amount of time to spend theirutx I was kind of funnyumyeah souh basic idea uh utrexo can make runningnodes small and fast and that's the goalI I you know everyone in cores everyoneworking on this sort of worries heypeople aren't running nodes enoughthey're they're trusting theseum you know exchanges or they're usingsomething like electrum which you knowit's pretty good but you lose a lot ofprivacy and some security with usingthese kind of electron based walletsum so you want to reduce the technicaltechnical limitations thoughts againstUnchained scalability who knows maybe ifit gets really easy to run full nodeswith huge utxo sets and blockchainsmaybe you can have some kind of you knowblock size increase I don't think that'sthat crazy I I think it's um a littleconcerning that like there were a lot ofpeople with really dumb ideas aboutincreasing the block size just becausethey had they were dumb people with dumbideas doesn't mean that the like weshould never talk about it again butum and it actually might make some ofthe code simpler uh because you have theability to sort of get rid of level DBin in a lot of cases is and that's likethe biggest scariest import to a lot ofBitcoin code so that'd be coolum yeah it there's no way to make moneyfrom it so that may be why there's notquite as much interest in like all thesestartups working on you know lightningNetwork or discrete law contracts yeahutrexo I'm pretty sure you can't makemoney which which is okayum so but I think it's more behind thescenes like ifum if it works people might notnecessarily know that it might just bean option in Bitcoin core and likeyou're using utrxo and it's faster andsmallerum so that there's a bunch of peopleworking on it open source uh myself acouple people one in you know Korea onein Germany like sort of global things wehave calls every Monday or something soyeah come on GitHub talk to talk to meabout itum yeah so I think that's my last slidewe're out of time but yeah it's a littleit's a little hectic it's sort of tryingto condense eight years into 30 minutesso that's about a 500 million x uhcompression Factor it you know I dosleep a lot too so yeah it's it's notthat it's you know maybe only 200million x compression Factorumbut yeah I think myself and many of thepeople who have been talking today likewe want to get more people involved inBitcoin research and development it'sreally fun stuff I I don't know am I amaximumist I don't have any undercoins Ithink I'veI don't think I have any I might havelike some moneros but I think I lostthem like I've sometimes played aroundwith other coins but I'm basically likeI only like Bitcoinum and but I I am not as like oh it'sgonna take over the world because likeBitcoin is still kind of fragile I Iworry about it probably more than youknow a lot of a lot of people I know whoare like yeah Bitcoin I'm like yeah Ihope it works uh so it's still fragilebut I really think that like knowledgeand learning about it strengthens itum because one of the big attacks Iworry about and like you know in theblock size debate thing was happeningthat if you can get if you can redefinewhat Bitcoin means that's really scaryand then like that's a way to attack ituh so I think you know having lots ofpeople who use Bitcoin know about itreally well and I say about like my dadhe didn't want to buy Bitcoin because hewas like I don't understand it and I waslike well you should still buy somebodythen he retired a couple years ago andthen like the next time I saw him atlike Thanksgiving he was like so whodetermines the generator point on theelliptic curve and I'm like whoa okaylike he just just read everything aboutit and then you know a couple monthslater he's like okay I'm gonna buy someBitcoin I think it works I think Iunderstand it maybe not everything butlike yeah no this this works and I waslike okay that's cool like like Irespect that I he still should havebought some in like 2013 when I told himbut hey I bought some laterum and and I think that's like animportant part where if you reallyunderstand it and you're like knowwhat's happening it's it's much morerobust to any kind of attack becauseit's not just you're running thesoftware you sort of know what's goingon uh because there's gonna be all sortsof weird things where people are goingto try to redefine it or you knowpropose bad things and stuff so yeah Ihope learning about it is is part ofowning it okay so I'm out of time butyeah come bug me after and questions andstuff and yeah thanksthank youokay we can do questions and then y'allalso if you want to do less uh broadcastgossip questions after you know justcome bug me so we can do some questionsnowhello thank you for yourself thank youfor coming all the way down here inorder to educate usum and you said that you wanted morepeople involved in educating people andworking on improving Bitcoin protocolwhere should one start okay so where doyou start soI I can pitch my own like thing so I Itaught a class at MIT a couple years agoand there's YouTube videos so like ifsome people like them that's cool Iactually didn't real so it's um I justshould put this inside I think if youjust search like open courseware Bitcoinor open courseware uh it was the coursewas m-a-s.s62um but I think it's not too hard to findum I actually so I taught the class andthenthey took a while to sort of put thevideo on YouTube and that was aroundwhen coronavirus started and so I didn'treally think about it but then I went tolike um the Miami Bitcoin conference andstuff and all these people were like heyI saw your video and I was like oh ohyeah those videos like I sort of didn'tremember and then I looked at them againI'm like they're not the greatest videoslike they're they're I think the classwas pretty good I you know I think I didokayum but it's sort of the video is is justin the back of the classroom right so II'm like I should try to make betterones maybe so maybe at some point maybein the winter like try to make newvideos or something like update it uhbut I think that that can give some goodideasum there's also you know onlineum like when I started back in like youknow 2011 there was Bitcoin talk it'snot as good anymoreumI guess IRC there's like the the prreview Club Bitcoin op Tech I would sayin general there's there's a lot moredocumentation and and courses and stuffuh so yeah keeping up with Bitcoin opTech to some extent keep up with themailing list go on IRCum that's where people are talking aboutthis stuff and and people are stillreally openum you know to to like people askingquestions and stuff I randomly get likemessages on Twitter and probably morethan half I just delete because they'relike scammy like whatever but but ifpeople ask like actual technicalquestions and you know yeah maybe youcould Google it and find it but likeI'll answer because it's like you know Iknow it and it's it saves some time soso I'm I'm pretty open to that kind ofstuff too so yeah sureany otherhi thank you for all your talk I reallyenjoy I really like the the energy youput in your in your new talk and uh toto show us how passion nature about thissubject but you know I'm passionate toobecause we saw we were together at thebig Dev and it was really a fruitfuldescription I really enjoyed it uh forthe education and maybe I wouldrecommend to some video from someonecalled curious inventor on on YouTube hemade a really great animation oflightning for example and even onceforever Beacon but it was really like2013 so it was a little while ago butthe video are really good very animatedand it's really beautiful to understandstuff I I think so maybe you should trythat and yeah so now my questions a bitabout utric so and uh what are youwondering because yeah the solution isto compress it takes a set and fivegigabyte doesn't seem much for now andbut you say to it will uh make it fasterso I so often the problems like IBD youknow the initial block download isreally the bottleneck for for full notadoption I get I think and uh I waswondering uh how what do you think aboutthe because they are trade-offeverywhere and I bet that uh because youhave to transmit the proof of existenceof Fuji XO uh then maybe the bond withis higher yes and but I guess you winsomething with with rhyme management ormemory because you can fit the utxo inthe world Memorial without worryingabout being too loud so what do youthink and what what the state of it yeahsoum the download can be larger up totwice as large right so and because theproofs you know you also are downloadingthese proofs if you want to do full IBDand you have no caching at all uh itends up being almost a terabyte total solike 500 gigs of box around 500 gigs ofproofs so that's worse right so ifyou're really bandwidth constrainedmaybe don't do this so my example is ifyou're on a airplane with a really fastnew laptop this will make it worse butin many cases people have extrabandwidth and like lower Hardware so ifyou have a Raspberry Pi connected toFiber Optic internet this will help alot so yeah there is a bandwidthtrade-offum but the sort of idea here is ah Ididn't but the the caching is actuallypretty good we have really nice ways toCache ahead of time that reduce theproofs to not to you know maybe 20 or 30percent moreumone reason it's faster is you canparallelize much better so we have wehave sort of fun code where youbasically can have like worker threadsthat are verifying a block because theydon't each they're sort ofself-contained you can say like here'sthe pre you know the initial state ofthe the utrexo uh tree here's the blockand proof and and tell me the finalState uh and that's you know a megabyteor two and you can just throw it to aworker thread and it'll just return aBool like yes this worked or didn't andalso return a um you know next one andyou can sort of match them up so you canyou know however many cores you have youcan validate in parallel you could intheory do that with Bitcoin today it'sjust you need to move this fivegigabytes as wellumso you can actually you can actuallyvalidate quite a bit faster and also itdoesn't touch your disk so even withssdsum you are in many ways bottlenecked bydisk IO and so the fact that it's evenif you're just you know still using aquad-core or 8 core or whateverum it ends up being faster becauseyou're you're not touching disk as muchif you have the the network bandwidth soyeah if your network bandwidthconstrained and you have a slowerinternet connection this doesn't help asmuch but the other thing you can dowhich I don't like talk about in theGitHub and stuff you can just skip thewhole thing right because the now chainstate is like less than a kilobyte fitson a QR code or whatever you can justhard code like a checkpoint kind ofthing into the binary and just skipeverything or do it later which there'syou know are people going to do thatmaybe I don't know so like in in somecases that might be okay or there's workon doing that with um Bitcoin today likeuh assume utxo and stuff soI don't know if that's the best solutionpeople are probably going to do itum so you can just say look I'm notgoing to do IBD I'm gonna skip it and goto like a couple weeks ago and then workfrom thereum it's a different trust model rightand but you can also sort of say okayI'm going to skip IBD just verify thelast couple days and then in thebackground I'll like sort ofprobabilistically or validate a littlebit behind or something so that can thatcan let you do like very fast startupand then like defer the validation ifyou want so those are some of thetechniques that we're looking at coolokay and he alsowell yes thank you they're saying thatthe small room I'll ask the geekyquestion because I think everybody hereis a geek too uh in fact you brought itup yourself well first I just wanted toalso back up what the other fellow saidis I didn't know you had so much energyfor educating so thank you for that andthe only time I ever saw you was on yourYouTube video on DLCs which is true thatthe video wasn't a bit in the back ofthe room but yeah basically I thoughtwhat was great there was that you knowwhat people always say you'll neversolve the Oracle problem and it's almostsolving it by the fact that you blindthe Oracle to who's making a bet so he'sblinded to the value of his of his or ofhis belt so I thought that was a greatidea but the geeky question is the oneyou just brought up yourself becauseecdca ecdsa is my weak point so what isthe answer to your father's question whodoes the term how do you determine thegenerator pointoh yeah it's weird so the actual uh secp256k1 generator point is something's upright because if I oh I we need likezipper or someone here he knows but it'ssomething likehalf the generator point is a point veryclose to the origin or something weirdthere's another there's something weirdabout it uh where it was like clearlynot randomly determinedum but we don't know and it shouldn'tmatter right it should be like anyarbitrary point on the curve should bejust the same and everything should befine uh and we don't have a good recordof like you know here's this nist thingso it's it's something weird thoughmaybe we'll find out for every signaturewe use the same generator yeah everyoneuses it's just part of the specificationyou know the curve is y squaredequals Xy I don't minus seven or plus seven yeahit's a real simple and then you havethis like prime factor and but theactual determination of the generatorPoint better would be some kind of youknow let's take the hash of the first 10digits of pi or something and and youknow set that as the x coordinate andtry to find a y coordinate for it it'slike okay here's it so there's sort ofnothing up your sleeve but there issomething up the sleeve of the SECp256k11 where I think you know if youyou can find there's a point wherethat's very close to the origin and ifyou double it you get the generatorpoint it's like huh okay they like gotit some weird way but uh I I don'tremember there's I'm sure I don't knowlike yeah maybe someone here knows butuh it it is it is like a kind ofinteresting you know fact but itshouldn't matter according to the mathany point should be fine and we all justuse that and like all of our public keysare the ratio between that generatorpoint and our public key right there areall our private Keys our ratios betweenthe you know generator point and ourpublic keys so should be safe hopefullyit is we'll seesounds good all right well thanks it'salmost retailed as well so go party[Music]",
  "title": "reseau lightning",
  "subtitle": "1.  fonctionnement du lightning network",
  "description": "tadge dryja (2022). thaddeus present his work : ln network genesis, dlc and utreexo - surfin' bitcoin 2022",
  "link": "https://www.youtube.com/watch?v=lMWQrImbQiM",
  "quadrant": " comment bitcoin change societe"
}